// Code generated by MockGen. DO NOT EDIT.
// Source: internal/config/controller.go
//
// Generated by this command:
//
//	mockgen -destination=internal/config/configmock/mock.go -package=configmock -write_generate_directive -source=internal/config/controller.go Operations
//

// Package configmock is a generated GoMock package.
package configmock

import (
	reflect "reflect"

	config "github.com/moisesvega/diffy/internal/config"
	gomock "go.uber.org/mock/gomock"
)

//go:generate mockgen -destination=internal/config/configmock/mock.go -package=configmock -write_generate_directive -source=internal/config/controller.go Operations

// MockOperations is a mock of Operations interface.
type MockOperations struct {
	ctrl     *gomock.Controller
	recorder *MockOperationsMockRecorder
}

// MockOperationsMockRecorder is the mock recorder for MockOperations.
type MockOperationsMockRecorder struct {
	mock *MockOperations
}

// NewMockOperations creates a new mock instance.
func NewMockOperations(ctrl *gomock.Controller) *MockOperations {
	mock := &MockOperations{ctrl: ctrl}
	mock.recorder = &MockOperationsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOperations) EXPECT() *MockOperationsMockRecorder {
	return m.recorder
}

// CreateDefaults mocks base method.
func (m *MockOperations) CreateDefaults(path string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDefaults", path)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateDefaults indicates an expected call of CreateDefaults.
func (mr *MockOperationsMockRecorder) CreateDefaults(path any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDefaults", reflect.TypeOf((*MockOperations)(nil).CreateDefaults), path)
}

// Read mocks base method.
func (m *MockOperations) Read(path string) (*config.Config, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read", path)
	ret0, _ := ret[0].(*config.Config)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MockOperationsMockRecorder) Read(path any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockOperations)(nil).Read), path)
}
